{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "count": {
      "type": "int",
      "defaultValue": 3
    },
    "publicIPAddresses_name": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "description"
      }
    },
    "sku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "description"
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "JAVA|8-jre8",
      "metadata": {
        "description": "description"
      }
    }
  },
  "variables": {
    "webAppPortalName": "[concat(parameters('webAppName'), '-webapp')]",
    "appServicePlanName": "[concat('AppServicePlan-', parameters('webAppName'))]"
  },
  "resources": [
    {
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2018-02-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('sku')]",
        "capacity": 2
      },
      "kind": "app,linux",
      "tags": {
        "displayName": "appServicePlan1"
      },
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "reserved": true
      }
    },
    {
      "name": "[variables('webAppPortalName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2018-11-01",
      "location": "[resourceGroup().location]",
      "kind": "app",
      "tags": {
        "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/appServicePlan1')]": "Resource",
        "displayName": "[variables('webAppPortalName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ],
      "properties": {
        "name": "[variables('webAppPortalName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[parameters('linuxFxVersion')]"
        }
      }
    },
    {
      "name": "anilstoragetestharness",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "tags": {
        "displayName": "anilstoragetest"
      },
      "location": "[resourceGroup().location]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2020-05-01",
      "name": "[parameters('publicIPAddresses_name')]",
      "location": "eastus",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Dynamic",
        "idleTimeoutInMinutes": 10,
        "ipTags": []
      }
    },
    {
      "name": "vnet",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "subnet",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "name": "[concat('nic-', copyIndex())]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2019-06-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "vnet"
      ],
      "copy": {
        "name": "nicLoop",
        "count": "[parameters('count')]"
      },
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipConfig",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', 'vnet', 'subnet')]"
              }
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "storageAccount": {
      "type": "string",
      "value": "anilstoragetestharness"
    },
    "ipAddresses": {
      "type": "array",
      "copy": {
        "count": "[parameters('count')]",
        "input": "[reference(concat('nic-', copyIndex())).ipConfigurations[0].properties.privateIPAddress]"
      }
    },
    "objectArray": {
      "type": "array",
      "copy": {
        "count": 3,
        "input": {
          "name": "[array(json('[\"one\",\"two\",\"three\"]'))[copyIndex()]]",
          "value": "[copyIndex(1)]"
        }
      }
    },
    "publicIp": {
      "type": "string",
      "value": "[parameters('publicIPAddresses_name')]"
    },
    "appPlan": {
      "type": "string",
      "value": "[variables('appServicePlanName')]"
    },
    "webApp": {
      "type": "string",
      "value": "[variables('webAppPortalName')]"
    }
  }
}
